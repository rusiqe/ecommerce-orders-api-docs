openapi: 3.0.3
info:
  title: E-commerce Orders API
  version: 1.0.0
  description: |
    API for managing orders in an e-commerce system. Supports listing, creating, retrieving, and updating order details.
  contact:
    name: Tech Writer Portfolio
    url: https://github.com/yourusername
    email: your.email@example.com

servers:
  - url: https://api.shopeasy.dev/v1
    description: Production server (fictional)

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    OrderSummary:
      type: object
      properties:
        order_id:
          type: string
        status:
          type: string
        total:
          type: number
        currency:
          type: string
        created_at:
          type: string
          format: date-time

    OrderDetail:
      type: object
      properties:
        order_id:
          type: string
        status:
          type: string
        total:
          type: number
        currency:
          type: string
        customer:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
        items:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
              name:
                type: string
              quantity:
                type: integer
              price:
                type: number
        shipping:
          type: object
          properties:
            method:
              type: string
            address:
              type: string
            status:
              type: string

paths:
  /orders:
    get:
      summary: List all orders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSummary'

    post:
      summary: Create a new order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      product_id:
                        type: string
                      quantity:
                        type: integer
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_id:
                    type: string
                  status:
                    type: string

  /orders/{order_id}:
    get:
      summary: Get details of a specific order
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetail'

  /orders/{order_id}/shipping:
    put:
      summary: Update shipping status of an order
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                tracking_number:
                  type: string
                carrier:
                  type: string
      responses:
        '200':
          description: Shipping updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
